parameters:
- name: rids
  displayName: The runtime identifiers to publish for (implies build agent OS)
  type: object
  default:
    - linux-x64
    - osx-x64
    - win-x64

jobs:
- ${{ each rid in parameters.rids }}:
  - job: ${{ replace(rid, '-', '_') }}
  
    pool:
      ${{ if startsWith(rid, 'linux-') }}:
        name: Azure Pipelines
        vmImage: ubuntu-latest
      ${{ elseif startsWith(rid, 'osx-') }}:
        name: Azure Pipelines
        vmImage: macos-latest
      ${{ elseif startsWith(rid, 'win-') }}:
        name: Azure Pipelines
        vmImage: windows-latest

    variables:
      - group: NuGet.Insights
      - name: BuildConfiguration
        value: Release
      - name: BuildSolution
        value: "$(Build.SourcesDirectory)/NuGet.Insights.sln"
      - name: OutputDirectory
        value: "$(Build.SourcesDirectory)/artifacts"
      - name: BUILDSECMON_OPT_IN
        value: true

    steps:
      - task: UseDotNet@2
        displayName: "Install .NET SDK from global.json"
        inputs:
          packageType: sdk
          useGlobalJson: true
          performMultiLevelLookup: true
      
      - task: NuGetAuthenticate@0
        displayName: "NuGet authenticate"

      - script: dotnet restore $(BuildSolution)
        displayName: "Restore"

      - script: dotnet build $(BuildSolution) --no-restore --configuration $(BuildConfiguration)
        displayName: "Build"

      - pwsh: |
          $rawCertBase64 = "$(nugetinsightstests-KustoClientCertificate)"
          $rawCert = [Convert]::FromBase64String($rawCertBase64)
          $certFile = Join-Path $(Agent.TempDirectory) "nugetinsightstests.pfx"
          Set-Content $certFile -Value $rawCert -AsByteStream
          echo "##vso[task.setvariable variable=NUGETINSIGHTS_KUSTOCLIENTCERTIFICATE;]$certFile"
        displayName: "Save Kusto client certificate"

      - script: dotnet test $(BuildSolution) --no-build --no-restore --configuration $(BuildConfiguration) --logger trx --blame-hang-timeout 30m --collect "Code coverage" --results-directory $(OutputDirectory)/TestResults/
        displayName: "Run tests"
        env:
          NUGETINSIGHTS_STORAGEACCOUNTNAME: $(nugetinsightstests-StorageAccountName)
          NUGETINSIGHTS_STORAGESAS: $(nugetinsightstests-BlobQueueTableFullAccessSas)
          NUGETINSIGHTS_STORAGEBLOBREADSAS: $(nugetinsightstests-BlobReadSas)
          NUGETINSIGHTS_KUSTOCONNECTIONSTRING: $(nugetinsightstests-KustoConnectionString)
          NUGETINSIGHTS_KUSTODATABASENAME: $(nugetinsightstests-KustoDatabaseName)
        retryCountOnTaskFailure: 3

      - task: PublishTestResults@2
        displayName: "Publish test results"
        inputs:
          testResultsFormat: VSTest
          testResultsFiles: "$(OutputDirectory)/TestResults/**/*.trx"
          failTaskOnFailedTests: false

      - task: PowerShell@2
        displayName: "Checking for Forks changes"
        inputs:
          targetType: "filePath"
          filePath: $(Build.SourcesDirectory)/src/Forks/download.ps1

      - script: npm install -g markdown-link-check@3.10.0
        displayName: "Install markdown-link-check"

      - task: PowerShell@2
        displayName: Validate markdown
        inputs:
          targetType: 'inline'
          script: 'Get-ChildItem $(Build.SourcesDirectory)/*.md -Recurse | % { markdown-link-check $_ --config $(Build.SourcesDirectory)/markdown-link-check.config.json }'
          failOnStderr: true

      - script: dotnet publish $(Build.SourcesDirectory)/src/Website/Website.csproj --configuration $(BuildConfiguration) --runtime ${{ rid }} --self-contained false
        displayName: "Publish Website to ZIP"

      - script: dotnet publish $(Build.SourcesDirectory)/src/Worker/Worker.csproj --configuration $(BuildConfiguration) --runtime ${{ rid }} --self-contained false
        displayName: "Publish Worker to ZIP"

      - task: PowerShell@2
        displayName: "Publish Azure Functions host"
        inputs:
          targetType: "filePath"
          filePath: $(Build.SourcesDirectory)/deploy/build-host.ps1
          arguments: >
            -RuntimeIdentifier ${{ rid }}
            -OutputPath $(OutputDirectory)/deploy/AzureFunctionsHost.zip

      - task: PowerShell@2
        displayName: "Generate Ev2 files"
        inputs:
          targetType: "filePath"
          filePath: $(Build.SourcesDirectory)/deploy/build-ev2.ps1
          arguments: >
            -ConfigNames ev2-dev-usnc
            -BuildVersion $(Build.BuildNumber)
            -WebsiteZipPath $(OutputDirectory)/deploy/Website.zip
            -WorkerZipPath $(OutputDirectory)/deploy/Worker.zip
            -AzureFunctionsHostZipPath $(OutputDirectory)/deploy/AzureFunctionsHost.zip

      - task: PublishBuildArtifacts@1
        displayName: "Publish build artifacts"
        inputs:
          pathToPublish: $(OutputDirectory)/ExpressV2
          artifactName: drop-${{ rid }}
          Parallel: true
