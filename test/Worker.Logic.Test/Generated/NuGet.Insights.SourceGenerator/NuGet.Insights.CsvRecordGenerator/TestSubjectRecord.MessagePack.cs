// <auto-generated />

// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

using MessagePack;
using MessagePack.Formatters;
using NuGet.Insights;

namespace NuGet.Insights.Worker.ReferenceTracking
{
    partial record TestSubjectRecord
    {
        public class TestSubjectRecordMessagePackFormatter : IMessagePackFormatter<TestSubjectRecord>
        {
            public void Serialize(ref MessagePackWriter writer, TestSubjectRecord value, MessagePackSerializerOptions options)
            {
                if (value is null)
                {
                    writer.WriteNil();
                    return;
                }

                writer.WriteArrayHeader(3);

                writer.Write(value.BucketKey);
                writer.Write(value.Id);
                writer.Write(value.IsOrphan);
            }

            public TestSubjectRecord Deserialize(ref MessagePackReader reader, MessagePackSerializerOptions options)
            {
                var count = reader.ReadArrayHeader();
                if (count != 3)
                {
                    throw new MessagePackSerializationException($"Invalid array length: {count}");
                }

                var record = new TestSubjectRecord();

                record.BucketKey = reader.ReadString();
                record.Id = reader.ReadString();
                record.IsOrphan = reader.ReadBoolean();

                return record;
            }
        }
    }
}