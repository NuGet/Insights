// <auto-generated />

// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

using System.Collections.Generic;

namespace NuGet.Insights
{
    static partial class NuGetInsightsWorkerLogicTestKustoDDL
    {
        public const string TestSubjectRecordDefaultTableName = "TestSubjects";

        public static readonly IReadOnlyList<string> TestSubjectRecordDDL = new[]
        {
            ".drop table __TABLENAME__ ifexists",

            """
            .create table __TABLENAME__ (
                BucketKey: string,
                Id: string,
                IsOrphan: bool
            ) with (docstring = __DOCSTRING__, folder = __FOLDER__)
            """,

            ".alter-merge table __TABLENAME__ policy retention softdelete = 30d",

            """
            .create table __TABLENAME__ ingestion csv mapping 'BlobStorageMapping'
            '['
                '{"Column":"BucketKey","DataType":"string","Properties":{"Ordinal":0}},'
                '{"Column":"Id","DataType":"string","Properties":{"Ordinal":1}},'
                '{"Column":"IsOrphan","DataType":"bool","Properties":{"Ordinal":2}}'
            ']'
            """,
        };

        public const string TestSubjectRecordPartitioningPolicy =
            """
            .alter table __TABLENAME__ policy partitioning '{'
              '"PartitionKeys": ['
                '{'
                  '"ColumnName": "BucketKey",'
                  '"Kind": "Hash",'
                  '"Properties": {'
                    '"Function": "XxHash64",'
                    '"MaxPartitionCount": 256'
                  '}'
                '}'
              ']'
            '}'
            """;

        private static readonly bool TestSubjectRecordAddTypeToDefaultTableName = AddTypeToDefaultTableName(typeof(NuGet.Insights.Worker.ReferenceTracking.TestSubjectRecord), TestSubjectRecordDefaultTableName);

        private static readonly bool TestSubjectRecordAddTypeToDDL = AddTypeToDDL(typeof(NuGet.Insights.Worker.ReferenceTracking.TestSubjectRecord), TestSubjectRecordDDL);

        private static readonly bool TestSubjectRecordAddTypeToPartitioningPolicy = AddTypeToPartitioningPolicy(typeof(NuGet.Insights.Worker.ReferenceTracking.TestSubjectRecord), TestSubjectRecordPartitioningPolicy);
    }
}
