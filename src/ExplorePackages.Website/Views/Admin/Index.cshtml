@model AdminViewModel
@{
    ViewData["Title"] = "Admin";
}

<div class="row">
    <div class="col-xs-12">
        <h2>@ViewData["Title"]</h2>

        <h3>Worker Queue</h3>
        <ul class="list-unstyled">
            <li><b>Total message count:</b> @(Model.ApproximateMessageCount + Model.PoisonApproximateMessageCount)</li>
            <li><b>Approximate message count:</b> @Model.ApproximateMessageCount</li>
            <li><b>Available messages:</b> @(Model.AvailableMessageCountIsExact ? string.Empty : "≥") @Model.AvailableMessageCountLowerBound</li>
            <li><b>Poison - approximate message count:</b> @Model.PoisonApproximateMessageCount</li>
            <li><b>Poison - available messages:</b> @(Model.PoisonAvailableMessageCountIsExact ? string.Empty : "≥") @Model.PoisonAvailableMessageCountLowerBound</li>
        </ul>

        @foreach (var catalogScan in Model.CatalogScans)
        {
            @await Html.PartialAsync("_CatalogScan", catalogScan)
        }
        
        <a name="DownloadsToCsv" class="anchor"></a>
        <h3>DownloadsToCsv</h3>
        <p><b>Is running?</b> @Model.IsDownloadsToCsvRunning</p>
        <form asp-action="StartDownloadsToCsv" method="post" class="form-inline">
            <div class="checkbox">
                <label>
                    <input type="checkbox" name="loop" value="true" /> Loop
                </label>
            </div>
            <button type="submit" class="btn btn-default">Start Downloads2Csv</button>
        </form>
    </div>
</div>
