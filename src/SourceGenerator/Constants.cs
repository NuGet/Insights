// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

namespace NuGet.Insights
{
    internal class Constants
    {
        public static readonly string Category = "NuGet.Insights.SourceGenerator";
        public static readonly string KustoCsvMappingName = "BlobStorageMapping";
        public static readonly string AutoGeneratedHeader =
            """
            // <auto-generated />

            // Copyright (c) .NET Foundation. All rights reserved.
            // Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.


            """;

        public static readonly string CsvRecordTemplate = AutoGeneratedHeader +
            """
            using System;
            using System.Collections.Generic;
            using System.IO;
            using System.Threading.Tasks;
            using NuGet.Insights;

            namespace {0}
            {{
                /* Kusto DDL:

                .drop table {1} ifexists;

                .create table {1} (
            {2}
                ) with (docstring = "See https://github.com/NuGet/Insights/blob/main/docs/tables/{1}.md", folder = "");

                .alter-merge table {1} policy retention softdelete = 30d;

                .alter table {1} policy partitioning {3};

                .create table {1} ingestion csv mapping '{13}'
                '['
            {4}
                ']'

                */
                partial {5} {6}
                {{
                    public static int FieldCount => {7};

                    public static void WriteHeader(TextWriter writer)
                    {{
            {8}
                    }}

                    public void Write(List<string> fields)
                    {{
            {9}
                    }}

                    public void Write(TextWriter writer)
                    {{
            {10}
                    }}

                    public async Task WriteAsync(TextWriter writer)
                    {{
            {11}
                    }}

                    public static {6} ReadNew(Func<string> getNextField)
                    {{
                        return new {6}
                        {{
            {12}
                        }};
                    }}

                    public void SetEmptyStrings()
                    {{
            {14}
                    }}{15}
                }}
            }}

            """;

        public static readonly string KustoDDLMainTemplate = AutoGeneratedHeader +
            """
            namespace NuGet.Insights
            {{
                public static partial class {0}
                {{
                    private static Dictionary<Type, string> InternalTypeToDefaultTableName;
                    private static Dictionary<Type, IReadOnlyList<string>> InternalTypeToDDL;
                    private static Dictionary<Type, string> InternalTypeToPartitioningPolicy;

                    public static IReadOnlyDictionary<Type, string> TypeToDefaultTableName => InternalTypeToDefaultTableName;
                    public static IReadOnlyDictionary<Type, IReadOnlyList<string>> TypeToDDL => InternalTypeToDDL;
                    public static IReadOnlyDictionary<Type, string> TypeToPartitioningPolicy => InternalTypeToPartitioningPolicy;
                    public const string CsvMappingName = "{1}";

                    private static bool AddTypeToDefaultTableName(Type type, string tableName)
                    {{
                        if (InternalTypeToDefaultTableName == null)
                        {{
                            InternalTypeToDefaultTableName = new Dictionary<Type, string>();
                        }}

                        InternalTypeToDefaultTableName.Add(type, tableName);
                        return true;
                    }}

                    private static bool AddTypeToDDL(Type type, IReadOnlyList<string> ddl)
                    {{
                        if (InternalTypeToDDL == null)
                        {{
                            InternalTypeToDDL = new Dictionary<Type, IReadOnlyList<string>>();
                        }}

                        InternalTypeToDDL.Add(type, ddl);
                        return true;
                    }}

                    private static bool AddTypeToPartitioningPolicy(Type type, string partitioningPolicy)
                    {{
                        if (InternalTypeToPartitioningPolicy == null)
                        {{
                            InternalTypeToPartitioningPolicy = new Dictionary<Type, string>();
                        }}

                        InternalTypeToPartitioningPolicy.Add(type, partitioningPolicy);
                        return true;
                    }}
                }}
            }}

            """;

        public static readonly string KustoDDLTemplate = AutoGeneratedHeader +
            """"
            using System.Collections.Generic;

            namespace NuGet.Insights
            {{
                static partial class {7}
                {{
                    public const string {3}DefaultTableName = "{1}";

                    public static readonly IReadOnlyList<string> {3}DDL = new[]
                    {{
                        ".drop table __TABLENAME__ ifexists",

                        """
                        .create table __TABLENAME__ (
            {2}
                        ) with (docstring = __DOCSTRING__, folder = __FOLDER__)
                        """,

                        ".alter-merge table __TABLENAME__ policy retention softdelete = 30d",

                        """
                        .create table __TABLENAME__ ingestion csv mapping '{6}'
                        '['
            {5}
                        ']'
                        """,
                    }};

                    public const string {3}PartitioningPolicy =
                        """
                        .alter table __TABLENAME__ policy partitioning {4}
                        """;

                    private static readonly bool {3}AddTypeToDefaultTableName = AddTypeToDefaultTableName(typeof({0}.{3}), {3}DefaultTableName);

                    private static readonly bool {3}AddTypeToDDL = AddTypeToDDL(typeof({0}.{3}), {3}DDL);

                    private static readonly bool {3}AddTypeToPartitioningPolicy = AddTypeToPartitioningPolicy(typeof({0}.{3}), {3}PartitioningPolicy);
                }}
            }}

            """";
    }
}
