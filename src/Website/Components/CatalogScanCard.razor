@{
    var error = TempData[Model.DriverType + ".Error"]?.ToString();
    var success = TempData[Model.DriverType + ".Success"]?.ToString();
    var hasError = !string.IsNullOrEmpty(error);
    var hasSuccess = !hasError && !string.IsNullOrEmpty(success);
    var message = error ?? success;
    var messageFontClass = hasError || hasSuccess ? "text-white" : string.Empty;
    var messageBgClass = hasError ? "bg-danger" : (hasSuccess ? "bg-success" : string.Empty);
    var borderClass = hasError ? "border-danger" : (hasSuccess ? "border-success" : string.Empty);

    string statusText = null;
    string statusTitle = null;
    if (Model.LatestScans.Any(x => x.State != CatalogIndexScanState.Complete))
    {
        statusText = "⌛";
        statusTitle = "A catalog scan is running.";
    }

    var title = Model.DriverType.ToString().Humanize()
        .Replace(" csv", " CSV")
        .Replace("Nu get package explorer", "NuGet Package Explorer");
}
<CollapseCard IdPrefix="@Model.DriverType.ToString()" Title="@title" StatusText="@statusText" StatusTitle="@statusTitle" BorderClass="@borderClass">
    <ul class="list-group list-group-flush">
        <li class="list-group-item"><b>Cursor:</b> @Model.Cursor.Value.ToZulu()</li>
        <li class="list-group-item"><b>Cursor age:</b> @Model.CursorAge.Humanize(precision: 7, maxUnit: Humanizer.Localisation.TimeUnit.Year, minUnit: Humanizer.Localisation.TimeUnit.Second)</li>
    </ul>

    <div class="card-body border-top">
        <form action="@Url.Action("UpdateCatalogScan")" method="post">
            <fieldset disabled="@(!Model.IsEnabled)" class="form-group">
                <input type="hidden" name="driverType" value="@Model.DriverType" />
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="@Model.DriverType.ToString()-useCustomCursor" name="useCustomCursor" value="true" />
                    <label class="form-check-label" for="@Model.DriverType.ToString()-useCustomCursor">Use custom cursor</label>
                </div>
                <div class="form-group custom-cursor" style="display: none">
                    <label for="@Model.DriverType-cursor">Custom cursor</label>
                    <input type="text" class="form-control" name="cursor" id="@Model.DriverType-cursor" value="@Model.DefaultMax.ToZulu()">
                </div>
                @if (!Model.OnlyLatestLeavesSupport.HasValue)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="@Model.DriverType.ToString()-onlyLatestLeaves" name="onlyLatestLeaves" checked="checked" value="true" />
                        <label class="form-check-label" for="@Model.DriverType.ToString()-onlyLatestLeaves">Only latest leaves</label>
                    </div>
                }
                @if (Model.SupportsReprocess)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="@Model.DriverType.ToString()-reprocess" name="reprocess" value="true" />
                        <label class="form-check-label" for="@Model.DriverType.ToString()-reprocess">Reprocess</label>
                    </div>
                }
                <button type="submit" class="btn btn-primary" name="start" value="true">Start</button>
                <button type="submit" class="btn btn-danger" name="overrideCursor" value="true" style="display: none"
                        data-message="Are you sure you want to override the cursor value on the '@title' catalog scan driver? If the new cursor value is later than the current value, some packages will likely not get processed. If the new cursor value is earlier than the current value, some packages will be reprocessed, which is typically harmless.">
                    Override cursor
                </button>
                @if (!Model.IsEnabled)
                {
                    <b class="ml-1">⚠️ This driver is disabled in configuration.</b>
                }
            </fieldset>
        </form>
    </div>

    @if (message != null)
    {
        <ul class="list-group list-group-flush">
            <li class="list-group-item @messageFontClass @messageBgClass">@((MarkupString)message)</li>
        </ul>
    }

    <table class="table">
        <thead>
            <tr>
                <th>Scan ID</th>
                <th>State</th>
                <th>Min</th>
                <th>Max</th>
                <th>Runtime</th>
            </tr>
        </thead>
        <tbody class="smaller-text">
            @foreach (var scan in Model.LatestScans)
            {
                <tr>
                    <td>@scan.GetScanId()</td>
                    <td>@scan.State</td>
                    <td>@scan.Min?.ToZulu()</td>
                    <td>@scan.Max?.ToZulu()</td>
                    <td>
                        @if (scan.Started.HasValue)
                        {
                            var runtime = scan.Completed.GetValueOrDefault(DateTimeOffset.UtcNow) - scan.Started.Value;
                            var runtimeStr = runtime.ToString("d\\.hh\\:mm\\:ss");
                            if (runtimeStr.StartsWith("0."))
                            {
                                runtimeStr = runtimeStr.Substring(2);
                            }
                            <text>@runtimeStr</text>
                        }
                    </td>
                </tr>
            }

            @if (Model.LatestScans.Count == 0)
            {
                <tr>
                    <td colspan="5" class="text-center">
                        <i>No scans have been started.</i>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</CollapseCard>

@code {
    [Parameter]
    public CatalogScanViewModel Model { get; set; }

    [Parameter]
    public ITempDataDictionary TempData { get; set; }

    [Parameter]
    public IUrlHelper Url { get;  set; } 
}
