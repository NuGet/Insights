// <auto-generated />

// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

using System.Collections.Generic;

namespace NuGet.Insights
{
    static partial class KustoDDL
    {
        public const string PackageContentDefaultTableName = "PackageContents";

        public static readonly IReadOnlyList<string> PackageContentDDL = new[]
        {
            ".drop table __TABLENAME__ ifexists",

            @".create table __TABLENAME__ (
    LowerId: string,
    Identity: string,
    Id: string,
    Version: string,
    CatalogCommitTimestamp: datetime,
    Created: datetime,
    ResultType: string,
    Path: string,
    FileExtension: string,
    SequenceNumber: int,
    Size: int,
    Truncated: bool,
    TruncatedSize: int,
    SHA256: string,
    Content: string,
    DuplicateContent: bool
)",

            ".alter-merge table __TABLENAME__ policy retention softdelete = 30d",

            @".create table __TABLENAME__ ingestion csv mapping 'BlobStorageMapping'
'['
    '{""Column"":""LowerId"",""DataType"":""string"",""Properties"":{""Ordinal"":2}},'
    '{""Column"":""Identity"",""DataType"":""string"",""Properties"":{""Ordinal"":3}},'
    '{""Column"":""Id"",""DataType"":""string"",""Properties"":{""Ordinal"":4}},'
    '{""Column"":""Version"",""DataType"":""string"",""Properties"":{""Ordinal"":5}},'
    '{""Column"":""CatalogCommitTimestamp"",""DataType"":""datetime"",""Properties"":{""Ordinal"":6}},'
    '{""Column"":""Created"",""DataType"":""datetime"",""Properties"":{""Ordinal"":7}},'
    '{""Column"":""ResultType"",""DataType"":""string"",""Properties"":{""Ordinal"":8}},'
    '{""Column"":""Path"",""DataType"":""string"",""Properties"":{""Ordinal"":9}},'
    '{""Column"":""FileExtension"",""DataType"":""string"",""Properties"":{""Ordinal"":10}},'
    '{""Column"":""SequenceNumber"",""DataType"":""int"",""Properties"":{""Ordinal"":11}},'
    '{""Column"":""Size"",""DataType"":""int"",""Properties"":{""Ordinal"":12}},'
    '{""Column"":""Truncated"",""DataType"":""bool"",""Properties"":{""Ordinal"":13}},'
    '{""Column"":""TruncatedSize"",""DataType"":""int"",""Properties"":{""Ordinal"":14}},'
    '{""Column"":""SHA256"",""DataType"":""string"",""Properties"":{""Ordinal"":15}},'
    '{""Column"":""Content"",""DataType"":""string"",""Properties"":{""Ordinal"":16}},'
    '{""Column"":""DuplicateContent"",""DataType"":""bool"",""Properties"":{""Ordinal"":17}}'
']'",
        };

        public const string PackageContentPartitioningPolicy = @".alter table __TABLENAME__ policy partitioning '{'
  '""PartitionKeys"": ['
    '{'
      '""ColumnName"": ""Identity"",'
      '""Kind"": ""Hash"",'
      '""Properties"": {'
        '""Function"": ""XxHash64"",'
        '""MaxPartitionCount"": 256'
      '}'
    '}'
  ']'
'}'";

        private static readonly bool PackageContentAddTypeToDefaultTableName = AddTypeToDefaultTableName(typeof(NuGet.Insights.Worker.PackageContentToCsv.PackageContent), PackageContentDefaultTableName);

        private static readonly bool PackageContentAddTypeToDDL = AddTypeToDDL(typeof(NuGet.Insights.Worker.PackageContentToCsv.PackageContent), PackageContentDDL);

        private static readonly bool PackageContentAddTypeToPartitioningPolicy = AddTypeToPartitioningPolicy(typeof(NuGet.Insights.Worker.PackageContentToCsv.PackageContent), PackageContentPartitioningPolicy);
    }
}
