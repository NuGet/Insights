// <auto-generated />

using System.Collections.Generic;

namespace NuGet.Insights
{
    static partial class KustoDDL
    {
        public const string PackageOwnerRecordDefaultTableName = "PackageOwners";

        public static readonly IReadOnlyList<string> PackageOwnerRecordDDL = new[]
        {
            ".drop table __TABLENAME__ ifexists",

            @".create table __TABLENAME__ (
    LowerId: string,
    Id: string,
    Owners: dynamic
)",

            ".alter-merge table __TABLENAME__ policy retention softdelete = 30d",

            @".alter table __TABLENAME__ policy partitioning '{'
  '""PartitionKeys"": ['
    '{'
      '""ColumnName"": ""LowerId"",'
      '""Kind"": ""Hash"",'
      '""Properties"": {'
        '""Function"": ""XxHash64"",'
        '""MaxPartitionCount"": 256'
      '}'
    '}'
  ']'
'}'",

            @".create table __TABLENAME__ ingestion csv mapping 'BlobStorageMapping'
'['
    '{""Column"":""LowerId"",""DataType"":""string"",""Properties"":{""Ordinal"":1}},'
    '{""Column"":""Id"",""DataType"":""string"",""Properties"":{""Ordinal"":2}},'
    '{""Column"":""Owners"",""DataType"":""dynamic"",""Properties"":{""Ordinal"":3}}'
']'",
        };

        private static readonly bool PackageOwnerRecordAddTypeToDefaultTableName = AddTypeToDefaultTableName(typeof(NuGet.Insights.Worker.OwnersToCsv.PackageOwnerRecord), PackageOwnerRecordDefaultTableName);

        private static readonly bool PackageOwnerRecordAddTypeToDDL = AddTypeToDDL(typeof(NuGet.Insights.Worker.OwnersToCsv.PackageOwnerRecord), PackageOwnerRecordDDL);
    }
}
