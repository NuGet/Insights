// <auto-generated />

// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

using System.Collections.Generic;

namespace NuGet.Insights
{
    static partial class KustoDDL
    {
        public const string PackageIconDefaultTableName = "PackageIcons";

        public static readonly IReadOnlyList<string> PackageIconDDL = new[]
        {
            ".drop table __TABLENAME__ ifexists",

            @".create table __TABLENAME__ (
    LowerId: string,
    Identity: string,
    Id: string,
    Version: string,
    CatalogCommitTimestamp: datetime,
    Created: datetime,
    ResultType: string,
    FileSize: long,
    MD5: string,
    SHA1: string,
    SHA256: string,
    SHA512: string,
    ContentType: string,
    Format: string,
    Width: int,
    Height: int,
    FrameCountByTime: int,
    FrameCountByResolution: int,
    FrameCountByPage: int,
    HorizontalResolution: real,
    VerticalResolution: real,
    Flags: int,
    PixelFormat: string,
    PropertyItems: dynamic
)",

            ".alter-merge table __TABLENAME__ policy retention softdelete = 30d",

            @".create table __TABLENAME__ ingestion csv mapping 'BlobStorageMapping'
'['
    '{""Column"":""LowerId"",""DataType"":""string"",""Properties"":{""Ordinal"":2}},'
    '{""Column"":""Identity"",""DataType"":""string"",""Properties"":{""Ordinal"":3}},'
    '{""Column"":""Id"",""DataType"":""string"",""Properties"":{""Ordinal"":4}},'
    '{""Column"":""Version"",""DataType"":""string"",""Properties"":{""Ordinal"":5}},'
    '{""Column"":""CatalogCommitTimestamp"",""DataType"":""datetime"",""Properties"":{""Ordinal"":6}},'
    '{""Column"":""Created"",""DataType"":""datetime"",""Properties"":{""Ordinal"":7}},'
    '{""Column"":""ResultType"",""DataType"":""string"",""Properties"":{""Ordinal"":8}},'
    '{""Column"":""FileSize"",""DataType"":""long"",""Properties"":{""Ordinal"":9}},'
    '{""Column"":""MD5"",""DataType"":""string"",""Properties"":{""Ordinal"":10}},'
    '{""Column"":""SHA1"",""DataType"":""string"",""Properties"":{""Ordinal"":11}},'
    '{""Column"":""SHA256"",""DataType"":""string"",""Properties"":{""Ordinal"":12}},'
    '{""Column"":""SHA512"",""DataType"":""string"",""Properties"":{""Ordinal"":13}},'
    '{""Column"":""ContentType"",""DataType"":""string"",""Properties"":{""Ordinal"":14}},'
    '{""Column"":""Format"",""DataType"":""string"",""Properties"":{""Ordinal"":15}},'
    '{""Column"":""Width"",""DataType"":""int"",""Properties"":{""Ordinal"":16}},'
    '{""Column"":""Height"",""DataType"":""int"",""Properties"":{""Ordinal"":17}},'
    '{""Column"":""FrameCountByTime"",""DataType"":""int"",""Properties"":{""Ordinal"":18}},'
    '{""Column"":""FrameCountByResolution"",""DataType"":""int"",""Properties"":{""Ordinal"":19}},'
    '{""Column"":""FrameCountByPage"",""DataType"":""int"",""Properties"":{""Ordinal"":20}},'
    '{""Column"":""HorizontalResolution"",""DataType"":""real"",""Properties"":{""Ordinal"":21}},'
    '{""Column"":""VerticalResolution"",""DataType"":""real"",""Properties"":{""Ordinal"":22}},'
    '{""Column"":""Flags"",""DataType"":""int"",""Properties"":{""Ordinal"":23}},'
    '{""Column"":""PixelFormat"",""DataType"":""string"",""Properties"":{""Ordinal"":24}},'
    '{""Column"":""PropertyItems"",""DataType"":""dynamic"",""Properties"":{""Ordinal"":25}}'
']'",
        };

        public const string PackageIconPartitioningPolicy = @".alter table __TABLENAME__ policy partitioning '{'
  '""PartitionKeys"": ['
    '{'
      '""ColumnName"": ""Identity"",'
      '""Kind"": ""Hash"",'
      '""Properties"": {'
        '""Function"": ""XxHash64"",'
        '""MaxPartitionCount"": 256'
      '}'
    '}'
  ']'
'}'";

        private static readonly bool PackageIconAddTypeToDefaultTableName = AddTypeToDefaultTableName(typeof(NuGet.Insights.Worker.PackageIconToCsv.PackageIcon), PackageIconDefaultTableName);

        private static readonly bool PackageIconAddTypeToDDL = AddTypeToDDL(typeof(NuGet.Insights.Worker.PackageIconToCsv.PackageIcon), PackageIconDDL);

        private static readonly bool PackageIconAddTypeToPartitioningPolicy = AddTypeToPartitioningPolicy(typeof(NuGet.Insights.Worker.PackageIconToCsv.PackageIcon), PackageIconPartitioningPolicy);
    }
}
