// <auto-generated />

// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

using System.Collections.Generic;

namespace NuGet.Insights
{
    static partial class KustoDDL
    {
        public const string PackageManifestRecordDefaultTableName = "PackageManifests";

        public static readonly IReadOnlyList<string> PackageManifestRecordDDL = new[]
        {
            ".drop table __TABLENAME__ ifexists",

            @".create table __TABLENAME__ (
    LowerId: string,
    Identity: string,
    Id: string,
    Version: string,
    CatalogCommitTimestamp: datetime,
    Created: datetime,
    ResultType: string,
    Size: int,
    OriginalId: string,
    OriginalVersion: string,
    MinClientVersion: string,
    DevelopmentDependency: bool,
    IsServiceable: bool,
    Authors: string,
    Copyright: string,
    Description: string,
    Icon: string,
    IconUrl: string,
    Language: string,
    LicenseUrl: string,
    Owners: string,
    ProjectUrl: string,
    Readme: string,
    ReleaseNotes: string,
    RequireLicenseAcceptance: bool,
    Summary: string,
    Tags: string,
    Title: string,
    PackageTypes: dynamic,
    LicenseMetadata: dynamic,
    RepositoryMetadata: dynamic,
    ReferenceGroups: dynamic,
    ContentFiles: dynamic,
    DependencyGroups: dynamic,
    FrameworkAssemblyGroups: dynamic,
    FrameworkRefGroups: dynamic,
    ContentFilesHasFormatException: bool,
    DependencyGroupsHasMissingId: bool,
    SplitTags: dynamic
)",

            ".alter-merge table __TABLENAME__ policy retention softdelete = 30d",

            @".create table __TABLENAME__ ingestion csv mapping 'BlobStorageMapping'
'['
    '{""Column"":""LowerId"",""DataType"":""string"",""Properties"":{""Ordinal"":2}},'
    '{""Column"":""Identity"",""DataType"":""string"",""Properties"":{""Ordinal"":3}},'
    '{""Column"":""Id"",""DataType"":""string"",""Properties"":{""Ordinal"":4}},'
    '{""Column"":""Version"",""DataType"":""string"",""Properties"":{""Ordinal"":5}},'
    '{""Column"":""CatalogCommitTimestamp"",""DataType"":""datetime"",""Properties"":{""Ordinal"":6}},'
    '{""Column"":""Created"",""DataType"":""datetime"",""Properties"":{""Ordinal"":7}},'
    '{""Column"":""ResultType"",""DataType"":""string"",""Properties"":{""Ordinal"":8}},'
    '{""Column"":""Size"",""DataType"":""int"",""Properties"":{""Ordinal"":9}},'
    '{""Column"":""OriginalId"",""DataType"":""string"",""Properties"":{""Ordinal"":10}},'
    '{""Column"":""OriginalVersion"",""DataType"":""string"",""Properties"":{""Ordinal"":11}},'
    '{""Column"":""MinClientVersion"",""DataType"":""string"",""Properties"":{""Ordinal"":12}},'
    '{""Column"":""DevelopmentDependency"",""DataType"":""bool"",""Properties"":{""Ordinal"":13}},'
    '{""Column"":""IsServiceable"",""DataType"":""bool"",""Properties"":{""Ordinal"":14}},'
    '{""Column"":""Authors"",""DataType"":""string"",""Properties"":{""Ordinal"":15}},'
    '{""Column"":""Copyright"",""DataType"":""string"",""Properties"":{""Ordinal"":16}},'
    '{""Column"":""Description"",""DataType"":""string"",""Properties"":{""Ordinal"":17}},'
    '{""Column"":""Icon"",""DataType"":""string"",""Properties"":{""Ordinal"":18}},'
    '{""Column"":""IconUrl"",""DataType"":""string"",""Properties"":{""Ordinal"":19}},'
    '{""Column"":""Language"",""DataType"":""string"",""Properties"":{""Ordinal"":20}},'
    '{""Column"":""LicenseUrl"",""DataType"":""string"",""Properties"":{""Ordinal"":21}},'
    '{""Column"":""Owners"",""DataType"":""string"",""Properties"":{""Ordinal"":22}},'
    '{""Column"":""ProjectUrl"",""DataType"":""string"",""Properties"":{""Ordinal"":23}},'
    '{""Column"":""Readme"",""DataType"":""string"",""Properties"":{""Ordinal"":24}},'
    '{""Column"":""ReleaseNotes"",""DataType"":""string"",""Properties"":{""Ordinal"":25}},'
    '{""Column"":""RequireLicenseAcceptance"",""DataType"":""bool"",""Properties"":{""Ordinal"":26}},'
    '{""Column"":""Summary"",""DataType"":""string"",""Properties"":{""Ordinal"":27}},'
    '{""Column"":""Tags"",""DataType"":""string"",""Properties"":{""Ordinal"":28}},'
    '{""Column"":""Title"",""DataType"":""string"",""Properties"":{""Ordinal"":29}},'
    '{""Column"":""PackageTypes"",""DataType"":""dynamic"",""Properties"":{""Ordinal"":30}},'
    '{""Column"":""LicenseMetadata"",""DataType"":""dynamic"",""Properties"":{""Ordinal"":31}},'
    '{""Column"":""RepositoryMetadata"",""DataType"":""dynamic"",""Properties"":{""Ordinal"":32}},'
    '{""Column"":""ReferenceGroups"",""DataType"":""dynamic"",""Properties"":{""Ordinal"":33}},'
    '{""Column"":""ContentFiles"",""DataType"":""dynamic"",""Properties"":{""Ordinal"":34}},'
    '{""Column"":""DependencyGroups"",""DataType"":""dynamic"",""Properties"":{""Ordinal"":35}},'
    '{""Column"":""FrameworkAssemblyGroups"",""DataType"":""dynamic"",""Properties"":{""Ordinal"":36}},'
    '{""Column"":""FrameworkRefGroups"",""DataType"":""dynamic"",""Properties"":{""Ordinal"":37}},'
    '{""Column"":""ContentFilesHasFormatException"",""DataType"":""bool"",""Properties"":{""Ordinal"":38}},'
    '{""Column"":""DependencyGroupsHasMissingId"",""DataType"":""bool"",""Properties"":{""Ordinal"":39}},'
    '{""Column"":""SplitTags"",""DataType"":""dynamic"",""Properties"":{""Ordinal"":40}}'
']'",
        };

        public const string PackageManifestRecordPartitioningPolicy = @".alter table __TABLENAME__ policy partitioning '{'
  '""PartitionKeys"": ['
    '{'
      '""ColumnName"": ""Identity"",'
      '""Kind"": ""Hash"",'
      '""Properties"": {'
        '""Function"": ""XxHash64"",'
        '""MaxPartitionCount"": 256'
      '}'
    '}'
  ']'
'}'";

        private static readonly bool PackageManifestRecordAddTypeToDefaultTableName = AddTypeToDefaultTableName(typeof(NuGet.Insights.Worker.PackageManifestToCsv.PackageManifestRecord), PackageManifestRecordDefaultTableName);

        private static readonly bool PackageManifestRecordAddTypeToDDL = AddTypeToDDL(typeof(NuGet.Insights.Worker.PackageManifestToCsv.PackageManifestRecord), PackageManifestRecordDDL);

        private static readonly bool PackageManifestRecordAddTypeToPartitioningPolicy = AddTypeToPartitioningPolicy(typeof(NuGet.Insights.Worker.PackageManifestToCsv.PackageManifestRecord), PackageManifestRecordPartitioningPolicy);
    }
}
