// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

using System.ComponentModel.DataAnnotations;

namespace NuGet.Insights.Worker.CatalogDataToCsv
{
    public partial record PackageVulnerabilityRecord : PackageRecord, ICsvRecord, IAggregatedCsvRecord<PackageVulnerabilityRecord>
    {
        public PackageVulnerabilityRecord()
        {
        }

        public PackageVulnerabilityRecord(Guid scanId, DateTimeOffset scanTimestamp, PackageDeleteCatalogLeaf leaf) : base(scanId, scanTimestamp, leaf)
        {
            ResultType = PackageVulnerabilityResultType.Deleted;
        }

        public PackageVulnerabilityRecord(Guid scanId, DateTimeOffset scanTimestamp, PackageDetailsCatalogLeaf leaf) : base(scanId, scanTimestamp, leaf)
        {
        }

        [Required]
        public PackageVulnerabilityResultType ResultType { get; set; }

        public int? GitHubDatabaseKey { get; set; }
        public string AdvisoryUrl { get; set; }
        public int? Severity { get; set; }

        public static List<PackageVulnerabilityRecord> Prune(List<PackageVulnerabilityRecord> records, bool isFinalPrune, IOptions<NuGetInsightsWorkerSettings> options, ILogger logger)
        {
            return Prune(records, isFinalPrune);
        }

        public int CompareTo(PackageVulnerabilityRecord other)
        {
            var c = base.CompareTo(other);
            if (c != 0)
            {
                return c;
            }

            return string.CompareOrdinal(other.AdvisoryUrl, AdvisoryUrl);
        }

        public string GetBucketKey()
        {
            return Identity;
        }
    }
}
