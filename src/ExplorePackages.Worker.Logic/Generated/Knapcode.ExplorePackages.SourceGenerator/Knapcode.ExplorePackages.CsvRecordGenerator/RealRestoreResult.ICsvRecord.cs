// <auto-generated />
using System;
using System.IO;
using Knapcode.ExplorePackages;

namespace Knapcode.ExplorePackages.Worker.RunRealRestore
{
    /* Kusto DDL:

    .drop table JverRealRestoreResults;

    .create table JverRealRestoreResults (
        Timestamp: datetime,
        DotnetVersion: string,
        Duration: timespan,
        Id: string,
        Version: string,
        Framework: string,
        Template: string,
        TargetCount: int,
        LibraryCount: int,
        RestoreSucceeded: bool,
        BuildSucceeded: bool,
        DependencyCount: int,
        FrameworkAssemblyCount: int,
        FrameworkReferenceCount: int,
        RuntimeAssemblyCount: int,
        ResourceAssemblyCount: int,
        CompileTimeAssemblyCount: int,
        NativeLibraryCount: int,
        BuildCount: int,
        BuildMultiTargetingCount: int,
        ContentFileCount: int,
        RuntimeTargetCount: int,
        ToolAssemblyCount: int,
        EmbedAssemblyCount: int,
        ErrorBlobPath: string,
        RestoreLogMessageCodes: string,
        OnlyNU1202: bool,
        OnlyNU1213: bool,
        BuildErrorCodes: string,
        OnlyMSB3644: bool
    );

    .create table JverRealRestoreResults ingestion csv mapping 'JverRealRestoreResults_mapping'
    '['
        '{"Column":"Timestamp","DataType":"datetime","Properties":{"Ordinal":0}},'
        '{"Column":"DotnetVersion","DataType":"string","Properties":{"Ordinal":1}},'
        '{"Column":"Duration","DataType":"timespan","Properties":{"Ordinal":2}},'
        '{"Column":"Id","DataType":"string","Properties":{"Ordinal":3}},'
        '{"Column":"Version","DataType":"string","Properties":{"Ordinal":4}},'
        '{"Column":"Framework","DataType":"string","Properties":{"Ordinal":5}},'
        '{"Column":"Template","DataType":"string","Properties":{"Ordinal":6}},'
        '{"Column":"TargetCount","DataType":"int","Properties":{"Ordinal":7}},'
        '{"Column":"LibraryCount","DataType":"int","Properties":{"Ordinal":8}},'
        '{"Column":"RestoreSucceeded","DataType":"bool","Properties":{"Ordinal":9}},'
        '{"Column":"BuildSucceeded","DataType":"bool","Properties":{"Ordinal":10}},'
        '{"Column":"DependencyCount","DataType":"int","Properties":{"Ordinal":11}},'
        '{"Column":"FrameworkAssemblyCount","DataType":"int","Properties":{"Ordinal":12}},'
        '{"Column":"FrameworkReferenceCount","DataType":"int","Properties":{"Ordinal":13}},'
        '{"Column":"RuntimeAssemblyCount","DataType":"int","Properties":{"Ordinal":14}},'
        '{"Column":"ResourceAssemblyCount","DataType":"int","Properties":{"Ordinal":15}},'
        '{"Column":"CompileTimeAssemblyCount","DataType":"int","Properties":{"Ordinal":16}},'
        '{"Column":"NativeLibraryCount","DataType":"int","Properties":{"Ordinal":17}},'
        '{"Column":"BuildCount","DataType":"int","Properties":{"Ordinal":18}},'
        '{"Column":"BuildMultiTargetingCount","DataType":"int","Properties":{"Ordinal":19}},'
        '{"Column":"ContentFileCount","DataType":"int","Properties":{"Ordinal":20}},'
        '{"Column":"RuntimeTargetCount","DataType":"int","Properties":{"Ordinal":21}},'
        '{"Column":"ToolAssemblyCount","DataType":"int","Properties":{"Ordinal":22}},'
        '{"Column":"EmbedAssemblyCount","DataType":"int","Properties":{"Ordinal":23}},'
        '{"Column":"ErrorBlobPath","DataType":"string","Properties":{"Ordinal":24}},'
        '{"Column":"RestoreLogMessageCodes","DataType":"string","Properties":{"Ordinal":25}},'
        '{"Column":"OnlyNU1202","DataType":"bool","Properties":{"Ordinal":26}},'
        '{"Column":"OnlyNU1213","DataType":"bool","Properties":{"Ordinal":27}},'
        '{"Column":"BuildErrorCodes","DataType":"string","Properties":{"Ordinal":28}},'
        '{"Column":"OnlyMSB3644","DataType":"bool","Properties":{"Ordinal":29}}'
    ']'

    */
    partial class RealRestoreResult
    {
        public void Write(TextWriter writer)
        {
            writer.Write(CsvUtility.FormatDateTimeOffset(Timestamp));
            writer.Write(',');
            CsvUtility.WriteWithQuotes(writer, DotnetVersion);
            writer.Write(',');
            writer.Write(Duration);
            writer.Write(',');
            CsvUtility.WriteWithQuotes(writer, Id);
            writer.Write(',');
            CsvUtility.WriteWithQuotes(writer, Version);
            writer.Write(',');
            CsvUtility.WriteWithQuotes(writer, Framework);
            writer.Write(',');
            CsvUtility.WriteWithQuotes(writer, Template);
            writer.Write(',');
            writer.Write(TargetCount);
            writer.Write(',');
            writer.Write(LibraryCount);
            writer.Write(',');
            writer.Write(CsvUtility.FormatBool(RestoreSucceeded));
            writer.Write(',');
            writer.Write(CsvUtility.FormatBool(BuildSucceeded));
            writer.Write(',');
            writer.Write(DependencyCount);
            writer.Write(',');
            writer.Write(FrameworkAssemblyCount);
            writer.Write(',');
            writer.Write(FrameworkReferenceCount);
            writer.Write(',');
            writer.Write(RuntimeAssemblyCount);
            writer.Write(',');
            writer.Write(ResourceAssemblyCount);
            writer.Write(',');
            writer.Write(CompileTimeAssemblyCount);
            writer.Write(',');
            writer.Write(NativeLibraryCount);
            writer.Write(',');
            writer.Write(BuildCount);
            writer.Write(',');
            writer.Write(BuildMultiTargetingCount);
            writer.Write(',');
            writer.Write(ContentFileCount);
            writer.Write(',');
            writer.Write(RuntimeTargetCount);
            writer.Write(',');
            writer.Write(ToolAssemblyCount);
            writer.Write(',');
            writer.Write(EmbedAssemblyCount);
            writer.Write(',');
            CsvUtility.WriteWithQuotes(writer, ErrorBlobPath);
            writer.Write(',');
            CsvUtility.WriteWithQuotes(writer, RestoreLogMessageCodes);
            writer.Write(',');
            writer.Write(CsvUtility.FormatBool(OnlyNU1202));
            writer.Write(',');
            writer.Write(CsvUtility.FormatBool(OnlyNU1213));
            writer.Write(',');
            CsvUtility.WriteWithQuotes(writer, BuildErrorCodes);
            writer.Write(',');
            writer.Write(CsvUtility.FormatBool(OnlyMSB3644));
            writer.WriteLine();
        }

        public void Read(Func<string> getNextField)
        {
            Timestamp = CsvUtility.ParseDateTimeOffset(getNextField());
            DotnetVersion = getNextField();
            Duration = TimeSpan.Parse(getNextField());
            Id = getNextField();
            Version = getNextField();
            Framework = getNextField();
            Template = getNextField();
            TargetCount = CsvUtility.ParseNullable(getNextField(), int.Parse);
            LibraryCount = CsvUtility.ParseNullable(getNextField(), int.Parse);
            RestoreSucceeded = bool.Parse(getNextField());
            BuildSucceeded = CsvUtility.ParseNullable(getNextField(), bool.Parse);
            DependencyCount = CsvUtility.ParseNullable(getNextField(), int.Parse);
            FrameworkAssemblyCount = CsvUtility.ParseNullable(getNextField(), int.Parse);
            FrameworkReferenceCount = CsvUtility.ParseNullable(getNextField(), int.Parse);
            RuntimeAssemblyCount = CsvUtility.ParseNullable(getNextField(), int.Parse);
            ResourceAssemblyCount = CsvUtility.ParseNullable(getNextField(), int.Parse);
            CompileTimeAssemblyCount = CsvUtility.ParseNullable(getNextField(), int.Parse);
            NativeLibraryCount = CsvUtility.ParseNullable(getNextField(), int.Parse);
            BuildCount = CsvUtility.ParseNullable(getNextField(), int.Parse);
            BuildMultiTargetingCount = CsvUtility.ParseNullable(getNextField(), int.Parse);
            ContentFileCount = CsvUtility.ParseNullable(getNextField(), int.Parse);
            RuntimeTargetCount = CsvUtility.ParseNullable(getNextField(), int.Parse);
            ToolAssemblyCount = CsvUtility.ParseNullable(getNextField(), int.Parse);
            EmbedAssemblyCount = CsvUtility.ParseNullable(getNextField(), int.Parse);
            ErrorBlobPath = getNextField();
            RestoreLogMessageCodes = getNextField();
            OnlyNU1202 = CsvUtility.ParseNullable(getNextField(), bool.Parse);
            OnlyNU1213 = CsvUtility.ParseNullable(getNextField(), bool.Parse);
            BuildErrorCodes = getNextField();
            OnlyMSB3644 = CsvUtility.ParseNullable(getNextField(), bool.Parse);
        }
    }
}
